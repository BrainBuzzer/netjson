<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY I-D.draft-bortzmeyer-dnsop-dns-privacy SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-bortzmeyer-dnsop-dns-privacy">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-capoano-kaplan-netjson-00" ipr="trust200902">
    <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->
    <!-- ***** FRONT MATTER ***** -->
    <front>
        <title abbrev="NetJSON">NetJSON: data interchange format for networks</title>
        <author fullname="Federico Capoano" initials="F.C." surname="Capoano">
            <organization>Ninux.org</organization>
            <address>
                <postal>
                    <street>Via Silvio Pellico 29</street>
                    <city>Pomezia</city>
                    <region>Rome</region>
                    <code>00071</code>
                    <country>Italy</country>
                </postal>
                <phone>+39 366 4253802</phone>
                <email>nemesis@ninux.org</email>
                <uri>http://www.ninux.org/</uri>
            </address>
        </author>
        <author fullname="L. Aaron Kaplan" initials="L.A." surname="Kaplan">
            <organization>CERT.at</organization>
            <address>
                <postal>
                    <street>Karlsplatz 1/2/9</street>
                    <city>Vienna</city>
                    <region></region>
                    <code>A-1010</code>
                    <country>Austria</country>
                </postal>
                <phone>+43 1 5056416 78</phone>
                <email>kaplan@cert.at</email>
                <uri>http://www.cert.at/</uri>
            </address>
        </author>
        <date month="July" year="2015" />
        <area>General</area>
        <keyword>gaia, MANET</keyword>
        <abstract>
            <t>
                NetJSON is a data interchange format based on JavaScript Object Notation (JSON)
                designed to describe the basic building blocks of layer2 and layer3 networking.
            </t>
            <t>
                It defines several types of JSON objects and the manner in which they are
                combined to represent a network: configuration of devices, monitoring data,
                network topology and routing information.
            </t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction">
            <t>
                NetJSON is a format for describing data about layer 2 and layer 3 networks using
                JavaScript Object Notation (JSON) <xref target="RFC7159">[RFC7159]</xref>.
            </t>
            <t>
                The format is concerned with the basic building blocks that compose a
                computer network (devices, monitoring data, routing, topology).
            </t>
            <t>
                The concepts in NetJSON are not new; they are derived from existing conventions
                consolidated in open source projects related to the networking field,
                such as:
            </t>
            <t>
                <list>
                    <t>
                        the Community Networking Markup Language
                        <xref target="CNML">[CNML]</xref>
                    </t>
                    <t>
                        open source implementations of network monitoring tools
                        like <xref target="Nagios">[Nagios]</xref>
                    </t>
                    <t>
                        dynamic routing protocols like
                        <xref target="OLSRd">[OLSRd]</xref>
                        (<xref target="RFC3626">[RFC3626]</xref> and <xref target="RFC7181">[RFC7181]</xref>),
                        <xref target="Babel">[Babel]</xref> (<xref target="RFC6126">[RFC6126]</xref>),
                        <xref target="Batman-adv">[Batman-adv]</xref> and
                        <xref target="BMX">[BMX]</xref>
                    </t>
                    <t>
                        linux distributions like
                        <xref target="OpenWRT">[OpenWRT]</xref>
                    </t>
                </list>
            </t>
            <t>
                These concepts have been streamlined to encourage interoperability
                between network centric web applications using JSON.
            </t>
            <section title="Motivatons">
                <t>
                    Developing software that deals with networks is harder than it should be.
                </t>
                <t>
                    Developers have to take into account all the differences between vendors,
                    operating systems, routing protocols, hardware and (when working with
                    community networks) with the different approaches of each community.
                </t>
                <t>
                    Very often, each vendor develops an entire stack that works
                    exclusively with its own hardware and software.
                </t>
                <t>
                    There exist many libraries and web apps for networking, but
                    it is very hard to make them interoperable, that is, making
                    them talk and understand one another with minimum effort.
                </t>
                <t>
                    This is an attempt to invert this trend, following the successful
                    example of the <xref target="GeoJSON">GeoJSON format</xref>.
                </t>
                <t>
                    By defining common data structures we can allow developers
                    to focus on their goals instead of having to struggle with
                    the differences of each vendor, firmware, routing protocol
                    or community.
                </t>
            </section>
            <section title="Requirements Language">
                <t>
                    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
                    "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
                    and "OPTIONAL" in this document are to be interpreted as described in
                    <xref target="RFC2119">RFC 2119</xref>.
                </t>
            </section>
            <section title="Conventions Used in This Document">
                <t>
                    The ordering of the members of any JSON object defined in this
                    document MUST be considered irrelevant,
                    as specified by <xref target="RFC7159">RFC RFC7159</xref>.
                </t>
                <t>
                    Some examples use the combination of a JavaScript single line
                    comment (//) followed by an ellipsis (...) as placeholder notation for
                    content deemed irrelevant by the authors.  These placeholders
                    must of course be deleted or otherwise replaced, before attempting to
                    validate the corresponding JSON code example.
                </t>
                <t>
                    Whitespace is used in the examples inside this document to
                    help illustrate the data structures, but is not required.
                    Unquoted whitespace is not significant in JSON.
                </t>
            </section>
            <section title="Definitions">
                <t>
                    <list>
                        <t>
                            JavaScript Object Notation (JSON), and the terms "object",
                            "member", "name", "value", "array", "number", "true",
                            "false", and "null" are to be interpreted as defined
                            in <xref target="RFC7159">RFC RFC7159</xref>.
                        </t>
                        <t>
                            The term "NetJSON type(s)" (sometimes abbreviated to "type(s)")
                            refers to (one of) the five case-sensitive strings:
                            "DeviceConfiguration", "DeviceMonitoring", "NetworkRoutes",
                            "NetworkGraph" and "NetworkCollection".
                        </t>
                        <t>
                            The term "JSON Schema" (sometimes abbreviated as "schema"),
                            refers to <xref target="JSON-Schema">JSON-Schema</xref> version 4.
                        </t>
                    </list>
                </t>
            </section>
        </section>
        <section title="NetJSON Object" anchor="netjson-object">
            <t>
                NetJSON always consists of a single object,
                referred to as the "NetJSON object" below.
            </t>
            <t>
                <list>
                    <t>
                        The top level of NetJSON text MUST be a JSON object.
                    </t>
                    <t>
                        The NetJSON object MUST have a member with the name "type".
                        The value of the member MUST be one of the NetJSON types defined below.
                    </t>
                    <t>
                        The NetJSON object MAY have any number of other members not
                        explicitly defined in this specification, referred as "custom members" below.
                        Implementations MUST ignore unrecognized custom members.
                    </t>
                    <t>
                        Before adding any custom member, implementers SHOULD read the
                        <xref target="netjson-registry">NetJSON registry section</xref>
                        in order to find existing custom members to reuse or
                        to learn how to officially submit new custom members.
                    </t>
                </list>
            </t>
            <section title="NetJSON types">
                <t>
                    NetJSON defines the following types:
                </t>
                <t>
                    <list>
                        <t><xref target="NetworkRoutes">NetworkRoutes</xref>;</t>
                        <t><xref target="NetworkGraph">NetworkGraph</xref>;</t>
                        <t><xref target="DeviceConfiguration">DeviceConfiguration</xref>;</t>
                        <t><xref target="DeviceMonitoring">DeviceMonitoring</xref>;</t>
                        <t><xref target="NetworkCollection">NetworkCollection</xref>.</t>
                    </list>
                </t>
            </section>
        </section>
        <section anchor="NetworkRoutes" title="NetworkRoutes">
            <t>
                <spanx style="strong">Definition:</spanx> a list of routes of a
                dynamic routing protocol or statically configured on the device.
            </t>
            <t>
                <spanx style="strong">Goals:</spanx> show internal information
                of a routing protocol for monitoring and debugging purposes.
            </t>
            <t>
                <spanx style="strong">Example:</spanx>
                <xref target="NetworkRoutes-example">A.1. NetworkRoutes Example</xref>.
            </t>
            <t>
                <spanx style="strong">JSON Schema:</spanx>
                <xref target="NetworkRoutes-schema">B.1. NetworkRoutes Schema</xref>.
            </t>
            <t>
                A <spanx style="em">NetworkRoutes</spanx> object MUST
                define the following REQUIRED members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>type</c><c>string</c><c>MUST be <spanx style="em">"NetworkRoutes"</spanx></c>
                <c>protocol</c><c>string</c><c>name of the routing protocol,
                may be <spanx style="em">"static"</spanx> when representing static routes</c>
                <c>version</c><c>string</c><c>version of the routing protocol,
                may be <spanx style="em">null</spanx> when representing static routes</c>
                <c>metric</c><c>string</c><c>name of main routing metric used
                by the routing protocol to determine the best routes when sending
                packets, may be <spanx style="em">null</spanx> when representing static routes</c>
                <c>routes</c><c>array</c><c>array of <xref target="route-objects">Route Objects</xref></c>
            </texttable>
            <t>
                A <spanx style="em">NetworkRoutes</spanx> object MAY
                also define the following OPTIONAL members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>revision</c><c>string</c><c>string
                indicating the revision from which the routing protocol
                binary was built (eg: git hash, svn revision)</c>
                <c>topology_id</c><c>string</c><c>arbitrary identifier of the topology</c>
                <c>router_id</c><c>string</c><c>arbitrary identifier of the router
                on which the protocol is running (eg: ip, mac, hash)</c>
            </texttable>
            <section title="Route Objects" anchor="route-objects">
                <t>
                    Each route object MUST define the following REQUIRED members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>destination</c><c>string</c><c>the ip address, prefix or mac
                    address that will be matched to the destination of the traffic</c>
                    <c>next</c><c>string</c><c>the ip address, prefix or mac
                    address of the next hop</c>
                    <c>device</c><c>string</c><c>the interface the traffic will be
                    going to, it may be omitted when representing static routes</c>
                    <c>cost</c><c>number</c><c>value of the routing metric indicating the
                    outgoing cost to reach the destination; lower cost is better,
                    it MAY be omitted when representing static routes
                    <spanx style="em">Infinity</spanx> and <spanx style="em">NaN</spanx>
                    are not allowed in accordance with the
                    <xref target="RFC7159">JSON RFC</xref></c>
                </texttable>
                <t>
                    Each route object MAY also define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>cost_text</c><c>string</c><c>human readable representation of the
                    <spanx style="em">cost</spanx> member</c>
                    <c>source</c><c>string</c><c>the source address of the route
                    (used in source-specific routing)</c>
                </texttable>
            </section>
        </section>
        <section anchor="NetworkGraph" title="NetworkGraph">
            <t>
                <spanx style="strong">Definition:</spanx>
                a list of nodes and links known by a node.
            </t>
            <t>
                <spanx style="strong">Goals:</spanx>
                visualization of network topology, collect network topology
                from distance vector protocols, monitoring.
            </t>
            <t>
                <spanx style="strong">Example:</spanx>
                <xref target="NetworkGraph-example">A.2. NetworkGraph Example</xref>.
            </t>
            <t>
                <spanx style="strong">JSON Schema:</spanx>
                <xref target="NetworkGraph-schema">B.2. NetworkGraph Schema</xref>.
            </t>
            <t>
                A <spanx style="em">NetworkGraph</spanx> object MUST
                define the following REQUIRED members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>type</c><c>string</c><c>MUST be <spanx style="em">"NetworkGraph"</spanx></c>
                <c>protocol</c><c>string</c><c>name of the routing protocol,
                may be <spanx style="em">"static"</spanx> when representing static routes</c>
                <c>version</c><c>string</c><c>version of the routing protocol,
                may be <spanx style="em">null</spanx> when representing static routes</c>
                <c>metric</c><c>string</c><c>name of main routing metric used
                by the routing protocol to determine the best routes when sending
                packets, may be <spanx style="em">null</spanx> when representing static routes</c>
                <c>nodes</c><c>array</c><c>array of <xref target="node-objects">Node Objects</xref></c>
                <c>links</c><c>array</c><c>array of <xref target="link-objects">Link Objects</xref></c>
            </texttable>
            <t>
                A <spanx style="em">NetworkGraph</spanx> object MAY
                also define the following OPTIONAL members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>revision</c><c>string</c><c>string
                indicating the revision from which the routing protocol
                binary was built (eg: git hash, svn revision)</c>
                <c>topology_id</c><c>string</c><c>arbitrary identifier of the topology</c>
                <c>router_id</c><c>string</c><c>arbitrary identifier of the router
                on which the protocol is running (eg: ip, mac, hash)</c>
                <c>label</c><c>string</c><c>a human readable label for the topology</c>
            </texttable>
            <section title="Node Objects" anchor="node-objects">
                <t>
                    Each node object MUST define the following REQUIRED members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>id</c><c>string</c><c>arbitrary identifier of the node</c>
                </texttable>
                <t>
                    Each node object MAY also define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>label</c><c>string</c><c>human readable label of the node</c>
                    <c>local_addresses</c><c>array</c><c>array of strings
                    representing additional addresses (mac/ip) which can be
                    used to communicate with the node</c>
                    <c>properties</c><c>object</c><c>object which MAY contain
                    any arbitrary member; These aribtrary members SHOULD be visualized by
                    user interface software</c>
                </texttable>
            </section>
            <section title="Link Objects" anchor="link-objects">
                <t>
                    Each link object MUST define the following REQUIRED members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>source</c><c>string</c><c>id of the source node</c>
                    <c>target</c><c>string</c><c>id of the target node</c>
                    <c>cost</c><c>number</c><c>value of the routing metric indicating the
                    outgoing cost to reach the destination; lower cost is better,
                    it MAY be omitted when representing static routes;
                    <spanx style="em">Infinity</spanx> and <spanx style="em">NaN</spanx>
                    are not allowed in accordance with the
                    <xref target="RFC7159">JSON RFC</xref></c>
                </texttable>
                <t>
                    Each link object MAY also define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>cost_text</c><c>string</c><c>human readable representation of the
                    <spanx style="em">cost</spanx> member;</c>
                    <c>properties</c><c>object</c><c>object which MAY contain
                    any arbitrary member;
                    These aribtrary members SHOULD be visualized by
                    user interface software</c>
                </texttable>
            </section>
        </section>
        <section anchor="DeviceConfiguration" title="DeviceConfiguration">
            <t>
                <spanx style="strong">Definition:</spanx> configuration and properties of a network device.
            </t>
            <t>
                <spanx style="strong">Goals:</spanx> configuration storage and management, import and export
                configurations between different monitoring tools or network controllers.
            </t>
            <t>
                <spanx style="strong">Example:</spanx>
                <xref target="DeviceConfiguration-example">A.3. DeviceConfiguration Example</xref>.
            </t>
            <t>
                <spanx style="strong">JSON Schema:</spanx>
                <xref target="DeviceConfiguration-schema">B.3. DeviceConfiguration Schema</xref>.
            </t>
            <t>
                A <spanx style="em">DeviceConfiguration</spanx> object MUST
                define the following REQUIRED members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>type</c><c>string</c><c>MUST be <spanx style="em">"DeviceConfiguration"</spanx></c>
            </texttable>
            <t>
                A <spanx style="em">DeviceConfiguration</spanx> object MAY
                also define the following OPTIONAL members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>general</c><c>object</c><c>object that contains general information related to
                the network device, see <xref target="general1">General Object</xref> for details</c>
                <c>hardware</c><c>object</c><c>hardware information related to the network device,
                see <xref target="general1">Hardware Object</xref> for details</c>
                <c>operating_system</c><c>object</c><c>operating system information,
                see <xref target="operating_system1">Operating System Object</xref> for details</c>
                <c>resources</c><c>object</c><c>describes the total amount of
                different resources available on the system, like RAM, flash, storage
                see <xref target="resources1">Resources Object</xref> for details</c>
                <c>interfaces</c><c>array</c><c>array of objects that represent how
                network interfaces are configured on the device,
                see <xref target="interfaces1">Interface Objects</xref> for details</c>
                <c>radios</c><c>array</c><c>array of objects
                that represent the configuration of radios available on the system,
                see <xref target="radios1">Radio Objects</xref> for details</c>
                <c>routes</c><c>array</c><c>array of objects that represent
                static routes configured on the device,
                see <xref target="routes1">Static Route Objects</xref> for details</c>
                <c>dns_servers</c><c>array</c><c>an array of strings denoting
                DNS servers configured on the device</c>
                <c>dns_search</c><c>array</c><c>an array of strings denoting DNS search paths
                configured on the device</c>
            </texttable>
            <section title="General Object" anchor="general1">
                <t>
                    The <spanx style="em">"general"</spanx> object of
                    <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>hostname</c><c>string</c><c>hostname of the network device</c>
                    <c>maintainer</c><c>string</c><c>email address of the maintainer of the network device</c>
                    <c>description</c><c>string</c><c>free-form textual description of the network device</c>
                </texttable>
            </section>
            <section title="Hardware Object" anchor="hardware1">
                <t>
                    The <spanx style="em">"hardware"</spanx> object of
                    <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>manufacturer</c><c>string</c><c>name of the manufacturer</c>
                    <c>model</c><c>string</c><c>name of the model</c>
                    <c>version</c><c>string</c><c>version of the device (as in the
                    <eref target="http://wiki.openwrt.org/toh/start">OpenWRT Table of Hardware</eref>)</c>
                    <c>cpu</c><c>string</c><c>CPU specification</c>
                </texttable>
            </section>
            <section title="Operating Sytem Object" anchor="operating_system1">
                <t>
                    The <spanx style="em">"operating_system"</spanx> object of
                    <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>name</c><c>string</c><c>name of the operating system or firmware</c>
                    <c>kernel</c><c>string</c><c>kernel version</c>
                    <c>version</c><c>string</c><c>version name or version number of the operating system</c>
                    <c>revision</c><c>string</c><c>revision from which the firmware
                    binary was built (eg: git hash, svn revision)</c>
                    <c>description</c><c>string</c><c>free-form textual description</c>
                </texttable>
            </section>
            <section title="Resources Object" anchor="resources1">
                <t>
                    The <spanx style="em">"resources"</spanx> object of
                    <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>memory</c><c>object</c><c>object containing only one REQUIRED
                    "total" member having as value an integer which represents the total
                    RAM available on the system measured in bytes</c>
                    <c>swap</c><c>object</c><c>object containing only one REQUIRED
                    "total" member having as value an integer which represents the total
                    swap memory available on the system measured in bytes</c>
                    <c>cpu</c><c>object</c><c> containing only one REQUIRED "frequency"
                    member having as value an integer which represents the clock frequency
                    measured in Hertz</c>
                    <c>flash</c><c>object</c><c>object containing only one REQUIRED
                    "total" member having as value an integer which represents the total
                    flash memory available on the system measured in bytes</c>
                    <c>storage</c><c>object</c><c>object containing only one REQUIRED
                    "total" member having as value an integer which represents the total
                    storage memory available on the system measured in bytes</c>
                </texttable>
            </section>
            <section title="Interface Objects" anchor="interfaces1">
                <t>
                    Each object contained in the <spanx style="em">"interfaces"</spanx>
                    array of <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>type</c><c>string</c><c>RECOMMENDED possible values for this field are: "ethernet", "wireless",
                    "bridge", "virtual", "loopback" or "other". Additional values MAY be allowed if needed.</c>
                    <c>bridge_members</c><c>array</c><c>array of interface names representing the bridged interfaces</c>
                    <c>name</c><c>string</c><c>name of the interface</c>
                    <c>mac</c><c>string</c><c>mac address</c>
                    <c>mtu</c><c>integer</c><c>value of the Maximum Transmission Unit setting</c>
                    <c>txqueuelen</c><c>integer</c><c>value of the TX queue length setting</c>
                    <c>autostart</c><c>boolean</c><c>indicates whether the interface should be automatically started after reboot, defaults to true</c>
                    <c>wireless</c><c>array</c><c>valid only if "type" is "wireless".
                    A list of wireless interface objects which contain attributes needed to configure settings
                    like SSID, BSSID, wireless mode, encryption and so on.
                    The array type allows to have multiple SSIDs assigned to each physical radio.
                    For detailed information regarding the wireless interface objects, please refer to
                    <xref target="DeviceConfiguration-schema">B.3. DeviceConfiguration Schema</xref>.</c>
                    <c>addresses</c><c>array of objects</c><c>An array of objects with
                    members listing the address, netmask, gateway (default gateway), family ("ipv4", "ipv6")
                    and protocol ("static", "dhcp") of the configured IP address of the logical interface
                    Note that a logical interface MAY have multiple IP addresses assigned
                    and therefore multiple array members are possible in this field</c>
                </texttable>
            </section>
            <section title="Radio Objects" anchor="radios1">
                <t>
                    Each object contained in the
                    <spanx style="em">"radios"</spanx> array of <spanx style="em">DeviceConfiguration</spanx>
                    MUST define the following REQUIRED members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>name</c><c>string</c><c>arbitrary name of the radio device</c>
                    <c>channel</c><c>integer</c><c>channel number</c>
                    <c>channel_width</c><c>integer</c><c>channel width in Hertz</c>
                    <c>tx_power</c><c>integer</c><c>transmission power in dBm</c>
                </texttable>
                <t>
                    Each object contained in the
                    <spanx style="em">"radios"</spanx> array of <spanx style="em">DeviceConfiguration</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>phy</c><c>string</c><c>name of the physical device to which the radio object is related to,
                    optional because usually autodetected</c>
                    <c>country</c><c>string</c><c>two digit country code in ISO 3166-1 alpha-2 format, case insensitive</c>
                    <c>disabled</c><c>boolean</c><c>whether the radio should be disabled or not, defaults to false</c>
                </texttable>
            </section>
            <section title="Static Route Objects" anchor="routes1">
                <t>
                    Each object contained in the
                    <spanx style="em">"routes"</spanx> array of <spanx style="em">DeviceConfiguration</spanx>
                    MUST define the following REQUIRED members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>destination</c><c>string</c><c>destination address of the static route</c>
                    <c>next</c><c>string</c><c>next hop address for the static route</c>
                </texttable>
            </section>
        </section>
        <section anchor="DeviceMonitoring" title="DeviceMonitoring">
            <t>
                <spanx style="strong">Definition:</spanx>
                information that indicates the behaviour of a device that changes over time.
            </t>
            <t>
                <spanx style="strong">Goals:</spanx>
                 ouput, collect, parse and visualize monitoring data of a network device.
            </t>
            <t>
                <spanx style="strong">Example:</spanx>
                <xref target="DeviceMonitoring-example">A.4. DeviceMonitoring Example</xref>.
            </t>
            <t>
                <spanx style="strong">JSON Schema:</spanx>
                <xref target="DeviceMonitoring-schema">B.4. DeviceMonitoring Schema</xref>.
            </t>
            <t>
                A <spanx style="em">DeviceMonitoring</spanx> object MUST
                define the following REQUIRED members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>type</c><c>string</c><c>MUST be <spanx style="em">"DeviceMonitoring"</spanx></c>
            </texttable>
            <t>
                A <spanx style="em">DeviceMonitoring</spanx> object MAY
                also define the following OPTIONAL members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>general</c><c>object</c><c>object that contains monitoring data that is related to
                the whole device, see <xref target="general2">General Object</xref> for details</c>
                <c>resources</c><c>object</c><c>describes how hardware resources are being used
                by the system, see <xref target="resources2">Resources Object</xref> for details</c>
                <c>interfaces</c><c>array</c><c>array of objects that represent monitoring data
                related to specific network interfaces,
                see <xref target="interfaces2">Interface Objects</xref> for details</c>
            </texttable>
            <section title="General Object" anchor="general2">
                <t>
                    The <spanx style="em">"general"</spanx> object of
                    <spanx style="em">DeviceMonitoring</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>local_time</c><c>integer</c><c>device local time</c>
                    <c>uptime</c><c>integer</c><c>time since boot, in seconds</c>
                </texttable>
            </section>
            <section title="Resources Object" anchor="resources2">
                <t>
                    The <spanx style="em">"resources"</spanx> object of
                    <spanx style="em">DeviceMonitoring</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>load</c><c>array</c><c>array with 3 numeric values representing
                    load average values respectively in the last minute,
                    in the last 5 minutes and in the last 15 minutes </c>
                    <c>memory</c><c>object</c><c>object describing RAM usage, SHOULD contain
                    the following RECOMMENDED members: "total", "free", "buffered", "cache" (unit: bytes)</c>
                    <c>swap</c><c>object</c><c>object describing swap memory usage, SHOULD contain
                    the following RECOMMENDED members: "total", "free" (unit: bytes)</c>
                    <c>connections</c><c>object</c><c>object describing connection state,
                    SHOULD contain two RECOMMENDED objects: "ipv4", "ipv6", each object MUST have
                    two members: "tcp" and "udp", indicating the number of open connections</c>
                    <c>processes</c><c>object</c><c>object describing running processes,
                    SHOULD contain the RECOMMENDED member "running" and MAY contain the following
                    RECOMMENDED members: "sleeping", "blocked", "zombie", "stopped", "paging".</c>
                    <c>cpu</c><c>object</c><c>object describing CPU usage, MAY contain
                    the following OPTIONAL members: "frequency" (MHz), "user", "system, "nice", "idle", "iowait", "irq", "softirq"</c>
                    <c>flash</c><c>object</c><c>object describing flash usage, SHOULD contain
                    the following RECOMMENDED members: "total", "free" (unit: bytes)</c>
                    <c>storage</c><c>object</c><c>object describing storage usage, SHOULD
                    contain the following RECOMMENDED members: "total", "free" (unit: bytes)</c>
                </texttable>
            </section>
            <section title="Interface Objects" anchor="interfaces2">
                <t>
                    Each object contained in the <spanx style="em">"interfaces"</spanx>
                    array of <spanx style="em">DeviceMonitoring</spanx>
                    MAY define the following OPTIONAL members:
                </t>
                <texttable align="left">
                    <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                    <c>name</c><c>string</c><c>name of the logical interface</c>
                    <c>uptime</c><c>integer</c><c>interface specific uptime in seconds</c>
                    <c>statistics</c><c>object</c><c>object providing detailed monitoring
                    data related to the interface, it MAY contain the following
                    OPTIONAL members: "collisions", "rx_frame_errors", "tx_compressed",
                    "multicast", rx_length_errors", "tx_dropped", "rx_bytes", "rx_missed_errors",
                    "tx_errors", "rx_compressed", "rx_over_errors", "tx_fifo_errors",
                    "rx_crc_errors", "rx_packets", "tx_heartbeat_errors",
                    "rx_dropped", "tx_aborted_errors", "tx_packets",
                    "rx_errors", "tx_bytes", "tx_window_errors", "rx_fifo_errors",
                    "tx_carrier_errors"</c>
                </texttable>
            </section>
        </section>
        <section anchor="NetworkCollection" title="NetworkCollection">
            <t>
                <spanx style="strong">Definition</spanx>:
                collection of NetJSON objects.
            </t>
            <t>
                <spanx style="strong">Goals</spanx>:
                allow to list various netjson objects into a coherent group, eg:
            </t>
            <t>
                <list>
                  <t>list graphs of different routing protocols running on the same device;</t>
                  <t>list all the routes of a multi-topology capable routing protocol;</t>
                  <t>list devices of a network.</t>
                </list>
            </t>
            <t>
                <spanx style="strong">Example</spanx>:
                <xref target="NetworkCollection-example">A.5. NetworkCollection Example</xref>.
            </t>
            <t>
                <spanx style="strong">JSON Schema:</spanx>
                <xref target="NetworkCollection-schema">B.5. NetworkCollection Schema</xref>.
            </t>
            <t>
                A <spanx style="em">NetworkCollection</spanx> object MUST
                define the following REQUIRED members:
            </t>
            <texttable align="left">
                <ttcol>key name</ttcol><ttcol>JSON type</ttcol><ttcol>description</ttcol>
                <c>type</c><c>string</c><c>MUST be <spanx style="em">"NetworkCollection"</spanx></c>
                <c>collection</c><c>array</c><c>array of <xref target="netjson-object">NetJSON objects</xref></c>
            </texttable>
        </section>
        <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->
        <?rfc needLines="8" ?>
        <section anchor="Security" title="Security Considerations">
            <t>
                NetJSON types and their schemas are JSON values.
                As such, all security considerations defined in
                <xref target="RFC7159">RFC 7159</xref> apply.
            </t>
        </section>
        <section anchor="Privacy" title="Privacy Considerations">
            <t>NetJSON does not impose to publish, send or collect sensitive information.</t>
            <t>NetJSON only describes how to represent data, each implementer MAY decide:</t>
            <t>
                <list>
                    <t>which optional members to publish (sensitive data can be omitted)</t>
                    <t>how to publish it (public, basic auth, token auth, ecc.)</t>
                    <t>how to collect it</t>
                    <t>which parts should be collected</t>
                </list>
            </t>
        </section>
        <section anchor="Acknowledgements" title="Acknowledgements">
            <t>This work was partially supported financially via the <xref target="CONFINE">CONFINE EU FP7</xref> grant.</t>
        </section>
    </middle>
    <!--  *****BACK MATTER ***** -->
    <back>
        <!-- References split into informative and normative -->
        <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->
        <references title="Normative References">
            &RFC2119;
            <reference anchor="RFC7159" target="https://tools.ietf.org/html/rfc7159">
                <front>
                    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
                    <author fullname="Tim Bray" initials="T.B." surname="Bray"/>
                    <date year="2014"/>
                </front>
            </reference>
            <reference anchor="JSON-Schema" target="https://tools.ietf.org/html/draft-zyp-json-schema">
                <front>
                    <title>JSON Schema: core definitions and terminology</title>
                    <author fullname="Francis Galiegue" initials="F.G." surname="Galiegue"/>
                    <date year="2013"/>
                </front>
            </reference>
        </references>
        <references title="Informative References">
            <reference anchor="GeoJSON" target="http://tools.ietf.org/html/draft-butler-geojson">
                <front>
                    <title>The GeoJSON Format</title>
                    <author fullname="H. Butler" initials="H.B." surname="Butler"/>
                    <date year="2015"/>
                </front>
            </reference>
            <reference anchor="CNML" target="http://www.cnml.info/">
                <front>
                    <title>The Community Networking Markup Language (CNML)</title>
                    <author fullname="Alexander Klosch"  initials="A." surname="Klosch"/>
                    <author fullname="Mario Behling"  initials="M." surname="Behling"/>
                    <date year="2007"/>
                </front>
            </reference>
            <reference anchor="OLSRd" target="http://www.olsr.org">
                <front>
                    <title>The Optimised Link State Routing Protocol (OLSR), olsrd open source implementation</title>
                    <author fullname="Henning Rogge" initials="H." surname="Rogge"/>
                    <author fullname="Andreas Tonnesen" initials="A." surname="Tonnesen"/>
                    <author fullname="Aaron Kaplan" initials="L.A." surname="Kaplan"/>
                    <author fullname="Bernd Petrovisch" initials="B." surname="Petrovitsch"/>
                    <author fullname="Thomas Lopatic" initials="T." surname="Lopatic"/>
                    <author fullname="Ferry Huberts" initials="F." surname="Huberts"/>
                    <date year="2004"/>
                </front>
            </reference>
            <reference anchor="RFC3626" target="https://tools.ietf.org/html/rfc3626">
                <front>
                    <title>Optimized Link State Routing Protocol (OLSR)</title>
                    <author fullname="T. Clausen" initials="T.C." surname="Clausen"/>
                    <author fullname="P. Jacquet" initials="P.J." surname="Jacquet"/>
                    <date year="2003"/>
                </front>
            </reference>
            <reference anchor="RFC7181" target="https://tools.ietf.org/html/rfc7181">
                <front>
                    <title>The Optimized Link State Routing Protocol Version 2</title>
                    <author fullname="T. Clausen" initials="T.C." surname="Clausen"/>
                    <author fullname="C. Dearlove" initials="C.D." surname="Dearlove"/>
                    <author fullname="P. Jacquet" initials="P.J." surname="Jacquet"/>
                    <author fullname="U. Herberg" initials="U.H." surname="Herberg"/>
                    <date year="2003"/>
                </front>
            </reference>
            <reference anchor="Babel" target="http://www.pps.univ-paris-diderot.fr/~jch/software/babel/">
                <front>
                    <title>Babel - a loop-avoiding distance-vector routing protocol</title>
                    <author fullname="Julius Chroboczek" initials="J.C." surname="Chroboczek"/>
                    <date year="2009"/>
                </front>
            </reference>
            <reference anchor="RFC6126" target="http://tools.ietf.org/html/rfc6126">
                <front>
                    <title>The Babel Routing Protocol</title>
                    <author fullname="Julius Chroboczek" initials="J.C." surname="Chroboczek"/>
                    <date year="2009"/>
                </front>
            </reference>
            <reference anchor="Batman-adv" target="http://www.open-mesh.org/projects/open-mesh/wiki">
                <front>
                    <title>Batman-adv routing protocol</title>
                    <author>
                        <organization>The B.A.T.M.A.N.  team</organization>
                    </author>
                    <date year="2009"/>
                </front>
            </reference>
            <reference anchor="BMX" target="http://bmx6.net/projects/bmx6">
                <front>
                    <title>BMX6 Mesh networking protocol</title>
                    <author fullname="Axel Neumann" initials="A.N." surname="Neumann"/>
                    <date year="2007"/>
                </front>
            </reference>
            <reference anchor="OpenWRT" target="http://www.openwrt.org">
                <front>
                    <title>OpenWRT</title>
                    <author>
                        <organization>The OpenWRT team</organization>
                    </author>
                    <date year="2004"/>
                </front>
            </reference>
           <reference anchor="Nagios" target="http://www.nagios.org">
                <front>
                    <title>Nagios network monitoring</title>
                    <author fullname="Ethan Galstad" initials="E. G." surname="Galstad"/>
                    <date year="1999"/>
                </front>
            </reference>
            <reference anchor="CONFINE" target="http://www.confine-project.eu">
                <front>
                    <title>The CONFINE EU project</title>
                    <author>
                        <organization>The CONFINE project team</organization>
                    </author>
                    <date year="2011"/>
                </front>
            </reference>
            <reference anchor="netjson-registry" target="https://github.com/interop-dev/netjson/blob/master/registry.rst">
                <front>
                    <title>NetJSON Custom Members Registry</title>
                    <author fullname="Federico Capoano" initials="F.C." surname="Capoano"/>
                    <date year="2015"/>
                </front>
            </reference>
        </references>
        <section anchor="Examples" title="Examples">
            <t>
                Each of the examples below represents a valid and complete NetJSON object.
            </t>
            <section anchor="NetworkRoutes-example" title="NetworkRoutes Example">
                <figure>
                    <artwork>
<![CDATA[
{
    "type": "NetworkRoutes",
    "protocol": "olsrv2",
    "version": "0.8.2",
    "revision": "v0.8.2-6-ge2e3acc",
    "metric": "ff_dat_metric",
    "router_id": "192.168.0.101",
    "routes": [
        {
            "destination": "192.168.0.102",
            "next": "169.254.1.102",
            "cost": 4292352,
            "device": "eth1",
        }
    ]
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="NetworkGraph-example" title="NetworkGraph Example">
                <figure>
                    <artwork>
<![CDATA[
{
    "type": "NetworkGraph",
    "protocol": "olsr",
    "version": "0.6.6",
    "revision": "5031a799fcbe17f61d57e387bc3806de",
    "metric": "etx",
    "label": "Test Network",
    "router_id": "172.16.40.24",
    "nodes": [
        {
            "id": "172.16.40.24",
            "label": "node-A",
            "local_addresses": [
                "10.0.0.1",
                "10.0.0.2"
            ],
            "properties": {
                "hostname": "node1.my.net"
            }
        },
        {
            "id": "172.16.40.60",
            "label": "node-B",
            "properties": {
                "hostname": "node2.my.net"
            }
        }
    ],
    "links": [
        {
            "source": "172.16.40.24",
            "target": "172.16.40.60",
            "cost": 1.000,
            "cost_text": "1020  bit/s",
            "properties": {
                "lq": 1.000,
                "nlq": 0.497
            }
        }
    ]
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="DeviceConfiguration-example" title="DeviceConfiguration Example">
                <figure>
                    <artwork>
<![CDATA[
{
    "type": "DeviceConfiguration",
    "general": {
        "hostname": "DeviceNameExample",
        "maintainer": "email@example.org",
        "description": "general info here"
    },
    "hardware": {
        "manufacturer": "Example inc.",
        "model": "Example model",
        "revision": 1,
        "cpu": "Atheros AR2317"
    },
    "operating_system": {
        "name": "OpenWRT",
        "kernel": "3.10.49",
        "version": "Barrier Breaker",
        "revision": "r43321",
        "description": "OpenWrt Barrier Breaker 14.07"
    },
    "resources": {
        "memory": {
            "total": 67108864
        },
        "swap": {
            "total": 0
        },
        "cpu": {
            "frequency": 400000000
        },
        "flash": {
            "total": 8388608
        },
        "storage": {
            "total": null
        }
    },
    "radios": [
        {
            "name": "radio0",
            "phy": "phy0",
            "channel": 149,
            "channel_width": 20,
            "tx_power": 18,
            "country": "en",
            "disabled": false
        }
    ],
    "interfaces": [
        {
            "type": "wireless",
            "name": "wlan0",
            "mac": "de:9f:db:30:c9:c5",
            "mtu": 1500,
            "txqueuelen": 1000,
            "autostart": true,
            "wireless": [
                {
                    "radio": "radio0",
                    "mode": "access_point",
                    "ssid": "ap-ssid-example",
                    "encryption": {
                        "enabled": false
                    }
                }
            ],
            "addresses": [
                {
                    "address": "192.168.1.1",
                    "mask": 24,
                    "family": "ipv4",
                    "proto": "static"
                },
                {
                    "address": "fe80::216:44ff:fe60:32d2",
                    "mask": 64,
                    "family": "ipv6",
                    "proto": "static"
                }
            ]
        },
        {
            "type": "ethernet",
            "name": "eth0",
            "mac": "52:54:00:56:46:d0",
            "mtu": 1500,
            "txqueuelen": 1000,
            "autostart": true,
            "addresses": [
                {
                    "address": "176.9.211.214",
                    "mask": 28,
                    "family": "ipv4",
                    "proto": "static"
                },
                {
                    "address": "2a01:4f8:150:8ffc::214",
                    "mask": 64,
                    "family": "ipv6",
                    "proto": "static"
                },
                {
                    "address": "fe80::5054:ff:fe56:46d0",
                    "mask": 64,
                    "family": "ipv6",
                    "proto": "static"
                }
            ]
        }
    ],
    "routes": [
        {
            "destination": "10.0.3.1",
            "next": "10.0.2.1"
        }
    ],
    "dns_servers": [
        "10.254.0.1",
        "10.254.0.2"
    ],
    "dns_search": [
        "domain.com"
    ]
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="DeviceMonitoring-example" title="DeviceMonitoring Example">
                <figure>
                    <artwork>
<![CDATA[
{
    "type": "DeviceMonitoring",
    "general": {
        "local_time": 1414305354,
        "uptime": 3501937
    },
    "resources": {
        "load": [
           0.08,
           0.04,
           0.05
        ],
        "memory": {
            "total": 67108864,
            "free": 3156,
            "buffered": 2072,
            "cache": 6884
        },
        "swap": {
            "total": 0,
            "free": 0
        },
        "connections": {
            "ipv4": {
                "tcp": 4,
                "udp": 18
            },
            "ipv6": {
                "tcp": 2,
                "udp": 1
            }
        },
        "processes": {
            "running": 2,
            "sleeping": 36,
            "blocked": 0,
            "zombie": 0,
            "stopped": 0,
            "paging": 0
        },
        "cpu": {
            "frequency": 400000000,
            "user": 13,
            "system": 0,
            "nice": 4,
            "idle": 83,
            "iowait": 0,
            "irq": 0,
            "softirq": 0
        },
        "flash": {
            "total": 8388608,
            "free": 1388608
        },
        "storage": {
            "total": null,
            "free": null
        }
    },
    "interfaces": [
        {
            "name": "lo",
            "uptime": 1404305354,
            "statistics": {
               "collisions": 0,
               "rx_frame_errors": 0,
               "tx_compressed": 0,
               "multicast": 0,
               "rx_length_errors": 0,
               "tx_dropped": 0,
               "rx_bytes": 9287737,
               "rx_missed_errors": 0,
               "tx_errors": 0,
               "rx_compressed": 0,
               "rx_over_errors": 0,
               "tx_fifo_errors": 0,
               "rx_crc_errors": 0,
               "rx_packets": 57624,
               "tx_heartbeat_errors": 0,
               "rx_dropped": 0,
               "tx_aborted_errors": 0,
               "tx_packets": 57624,
               "rx_errors": 0,
               "tx_bytes": 9287737,
               "tx_window_errors": 0,
               "rx_fifo_errors": 0,
               "tx_carrier_errors": 0
            }
        },
        {
            "name": "wlan0",
            "uptime": 1304305354,
            "statistics": {
               "collisions": 0,
               "rx_frame_errors": 0,
               "tx_compressed": 0,
               "multicast": 0,
               "rx_length_errors": 0,
               "tx_dropped": 0,
               "rx_bytes": 2434,
               "rx_missed_errors": 0,
               "tx_errors": 0,
               "rx_compressed": 0,
               "rx_over_errors": 0,
               "tx_fifo_errors": 0,
               "rx_crc_errors": 0,
               "rx_packets": 5,
               "tx_heartbeat_errors": 0,
               "rx_dropped": 0,
               "tx_aborted_errors": 0,
               "tx_packets": 2169666,
               "rx_errors": 0,
               "tx_bytes": 583692816,
               "tx_window_errors": 0,
               "rx_fifo_errors": 0,
               "tx_carrier_errors": 0
            }
        },
        {
            "name": "eth0",
            "uptime": 1294305354,
            "statistics": {
                "collisions": 0,
                "rx_frame_errors": 0,
                "tx_compressed": 0,
                "multicast": 0,
                "rx_length_errors": 0,
                "tx_dropped": 0,
                "rx_bytes": 3542783708,
                "rx_missed_errors": 0,
                "tx_errors": 0,
                "rx_compressed": 0,
                "rx_over_errors": 0,
                "tx_fifo_errors": 0,
                "rx_crc_errors": 0,
                "rx_packets": 35118502,
                "tx_heartbeat_errors": 0,
                "rx_dropped": 14,
                "tx_aborted_errors": 0,
                "tx_packets": 11761973,
                "rx_errors": 0,
                "tx_bytes": 2952333765,
                "tx_window_errors": 0,
                "rx_fifo_errors": 0,
                "tx_carrier_errors": 0
            }
        }
    ]
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="NetworkCollection-example" title="NetworkCollection Example">
                <figure>
                    <artwork>
<![CDATA[
{
    "type": "NetworkCollection",
    "collection": [
        {
            "type": "NetworkGraph",
            "protocol": "olsr",
            "version": "0.6.6",
            "revision": "5031a799fcbe17f61d57e387bc3806de",
            "metric": "etx",
            "router_id": "172.16.40.24",
            "nodes": [
                { "id": "172.16.40.24" },
                { "id": "172.16.40.60" }
            ],
            "links": [
                {
                    "source": "172.16.40.24",
                    "target": "172.16.40.60",
                    "cost": 1.000,
                    "properties": {
                        "lq": 1.000,
                        "nlq": 0.497
                    }
                }
            ]
        },
        {
            "type": "NetworkGraph",
            "protocol": "olsrv2",
            "version": "0.8.0",
            "revision": "v0.8.0-0-g31b63ec-dirty",
            "router_id": "192.168.0.101",
            "metric": "ff_dat_metric",
            "nodes": [
                { "id": "192.168.0.101" },
                { "id": "192.168.0.102" }
            ],
            "links": [
                {
                    "source": "192.168.0.101",
                    "target": "192.168.0.102",
                    "cost": 2105088,
                    "cost_text": "1020  bit/s",
                    "properties": {
                        "in": 2105088,
                        "in_txt": "1020  bit/s"
                    }
                }
            ]
        }
    ]
}
]]>
                    </artwork>
                </figure>
            </section>
        </section>
        <section anchor="Schemas" title="Schemas">
            <t>
                Below are listed the JSON Schemas of the each NetJSON Type.
            </t>
            <section anchor="NetworkRoutes-schema" title="NetworkRoutes Schema">
                <figure>
                    <artwork>
<![CDATA[
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "type",
        "protocol",
        "version",
        "metric",
        "routes"
    ],
    "properties": {
        "type": {
            "id": "type",
            "type": "string",
            "default": "NetworkRoutes",
            "pattern": "NetworkRoutes"
        },
        "protocol": {
            "id": "protocol",
            "type": "string"
        },
        "version": {
            "id": "version",
            "type": "string"
        },
        "metric": {
            "id": "metric",
            "type": "string"
        },
        "revision": {
            "id": "revision",
            "type": "string"
        },
        "router_id": {
            "id": "router_id",
            "type": "string"
        },
        "topology_id": {
            "id": "topology_id",
            "type": "string"
        },
        "routes": {
            "id": "routes",
            "type": "array",
            "title": "Routes",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "Route",
                "additionalProperties": true,
                "required": [
                    "destination",
                    "next",
                    "device",
                    "cost"
                ],
                "properties": {
                    "destination": {
                        "id": "destination",
                        "type": "string"
                    },
                    "next": {
                        "id": "next",
                        "type": "string"
                    },
                    "device": {
                        "id": "device",
                        "type": "string"
                    },
                    "cost": {
                        "id": "cost",
                        "type": "number"
                    },
                    "source": {
                        "id": "source",
                        "type": "string"
                    },
                    "cost_txt": {
                        "id": "cost_txt",
                        "type": "string"
                    }
                }
            }
        }
    }
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="NetworkGraph-schema" title="NetworkGraph Schema">
                <figure>
                    <artwork>
<![CDATA[
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "type",
        "protocol",
        "version",
        "metric",
        "nodes",
        "links"
    ],
    "properties": {
        "type": {
            "id": "type",
            "type": "string",
            "default": "NetworkGraph",
            "pattern": "NetworkGraph"
        },
        "protocol": {
            "id": "protocol",
            "type": "string"
        },
        "version": {
            "id": "version",
            "type": "string"
        },
        "revision": {
            "id": "revision",
            "type": "string"
        },
        "metric": {
            "id": "metric",
            "type": "string"
        },
        "router_id": {
            "id": "router_id",
            "type": "string"
        },
        "topology_id": {
            "id": "topology_id",
            "type": "string"
        },
        "label": {
            "id": "label",
            "type": "string"
        },
        "nodes": {
            "id": "nodes",
            "type": "array",
            "title": "Nodes",
            "uniqueItems": true,
            "additionalItems": true,
            "items": [
                {
                    "title": "Node",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "id": "id",
                            "type": "string"
                        },
                        "label": {
                            "id": "label",
                            "type": "string"
                        },
                        "local_addresses": {
                            "id": "local_addresses",
                            "type": "array",
                            "items": [
                                {
                                    "id": "0",
                                    "type": "string"
                                },
                                {
                                    "id": "1",
                                    "type": "string"
                                }
                            ]
                        },
                        "properties": {
                            "id": "properties",
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            ]
        },
        "links": {
            "id": "links",
            "type": "array",
            "title": "Links",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "Link",
                "additionalProperties": true,
                "required": [
                    "source",
                    "target",
                    "cost"
                ],
                "properties": {
                    "source": {
                        "id": "source",
                        "type": "string"
                    },
                    "target": {
                        "id": "target",
                        "type": "string"
                    },
                    "cost": {
                        "id": "cost",
                        "type": "number",
                        "default": 1
                    },
                    "cost_text": {
                        "id": "cost_text",
                        "type": "string"
                    },
                    "properties": {
                        "id": "properties",
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        }
    }
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="DeviceConfiguration-schema" title="DeviceConfiguration Schema">
                <figure>
                    <artwork>
<![CDATA[
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "type"
    ],
    "properties": {
        "type": {
            "id": "type",
            "type": "string",
            "default": "DeviceConfiguration",
            "pattern": "DeviceConfiguration"
        },
        "general": {
            "id": "general",
            "type": "object",
            "title": "General",
            "additionalProperties": true,
            "properties": {
                "hostname": {
                    "id": "hostname",
                    "type": "string"
                },
                "maintainer": {
                    "id": "maintainer",
                    "type": "string"
                },
                "description": {
                    "id": "description",
                    "type": "string"
                }
            }
        },
        "hardware": {
            "id": "hardware",
            "type": "object",
            "title": "Hardware",
            "additionalProperties": true,
            "properties": {
                "manufacturer": {
                    "id": "manufacturer",
                    "type": "string"
                },
                "model": {
                    "id": "model",
                    "type": "string"
                },
                "revision": {
                    "id": "revision",
                    "type": "integer"
                },
                "cpu": {
                    "id": "cpu",
                    "type": "string"
                }
            }
        },
        "operating_system": {
            "id": "operating_system",
            "type": "object",
            "title": "Operating System",
            "additionalProperties": true,
            "properties": {
                "name": {
                    "id": "name",
                    "type": "string"
                },
                "kernel": {
                    "id": "kernel",
                    "type": "string"
                },
                "version": {
                    "id": "version",
                    "type": "string"
                },
                "revision": {
                    "id": "revision",
                    "type": "string"
                },
                "description": {
                    "id": "description",
                    "type": "string"
                }
            }
        },
        "resources": {
            "id": "resources",
            "type": "object",
            "title": "Resources",
            "additionalProperties": true,
            "properties": {
                "memory": {
                    "id": "memory",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        }
                    }
                },
                "swap": {
                    "id": "swap",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        }
                    }
                },
                "cpu": {
                    "id": "cpu",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "frequency": {
                            "id": "frequency",
                            "type": "integer"
                        }
                    }
                },
                "flash": {
                    "id": "flash",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        }
                    }
                },
                "storage": {
                    "id": "storage",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "radios": {
            "id": "radios",
            "type": "array",
            "title": "Radios",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "Radio",
                "additionalProperties": true,
                "required": [
                    "name",
                    "channel",
                    "channel_width",
                    "tx_power"
                ],
                "properties": {
                    "name": {
                        "id": "name",
                        "type": "string"
                    },
                    "phy": {
                        "id": "phy",
                        "type": "string"
                    },
                    "channel": {
                        "id": "channel",
                        "type": "integer"
                    },
                    "channel_width": {
                        "id": "channel_width",
                        "type": "integer"
                    },
                    "tx_power": {
                        "id": "tx_power",
                        "type": "integer"
                    },
                    "country": {
                        "id": "country",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                    },
                    "disabled": {
                        "id": "disabled",
                        "type": "boolean",
                        "default": false
                    }
                }
            }
        },
        "interfaces": {
            "id": "interfaces",
            "type": "array",
            "title": "Interfaces",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "Interface",
                "additionalProperties": true,
                "required": [
                    "name"
                ],
                "properties": {
                    "type": {
                        "id": "type",
                        "type": "string",
                        "enum": [
                            "ethernet",
                            "wireless",
                            "bridge",
                            "virtual",
                            "loopback"
                        ]
                    },
                    "name": {
                        "id": "name",
                        "type": "string"
                    },
                    "mac": {
                        "id": "mac",
                        "type": "string"
                    },
                    "mtu": {
                        "id": "mtu",
                        "type": "integer",
                        "default": 1500
                    },
                    "txqueuelen": {
                        "id": "txqueuelen",
                        "type": "integer"
                    },
                    "autostart": {
                        "id": "autostart",
                        "type": "boolean",
                        "default": true
                    },
                    "addresses": {
                        "id": "addresses",
                        "type": "array",
                        "title": "Addresses",
                        "uniqueItems": true,
                        "additionalItems": true,
                        "items": {
                            "type": "object",
                            "title": "Address",
                            "additionalProperties": true,
                            "properties": {
                                "address": {
                                    "id": "address",
                                    "type": "string"
                                },
                                "mask": {
                                    "id": "mask",
                                    "type": "integer"
                                },
                                "gateway": {
                                    "id": "gateway",
                                    "type": "string"
                                },
                                "family": {
                                    "id": "family",
                                    "type": "string",
                                    "enum": [
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "proto": {
                                    "id": "proto",
                                    "type": "string",
                                    "enum": [
                                        "static",
                                        "dhcp"
                                    ]
                                }
                            }
                        }
                    },
                    "bridge_members": {
                        "id": "bridge_members",
                        "type": "array",
                        "title": "Bridge Members",
                        "items": [
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "wireless": {
                        "type": "array",
                        "title": "Wireless interfaces",
                        "uniqueItems": true,
                        "additionalItems": true,
                        "items": {
                            "type": "object",
                            "title": "Wireless Interface",
                            "additionalProperties": true,
                            "required": [
                                "radio",
                                "mode",
                                "ssid"
                            ],
                            "properties": {
                                "radio": {
                                    "id": "radio",
                                    "type": "string"
                                },
                                "mode": {
                                    "id": "mode",
                                    "type": "string",
                                    "enum": [
                                        "access_point",
                                        "station",
                                        "adhoc",
                                        "wds",
                                        "monitor",
                                        "802.11s"
                                    ]
                                },
                                "ssid": {
                                    "id": "ssid",
                                    "type": "string"
                                },
                                "bssid": {
                                    "id": "bssid",
                                    "type": "string"
                                },
                                "hidden": {
                                    "id": "bssid",
                                    "type": "boolean",
                                    "default": false
                                },
                                "ack_distance": {
                                    "id": "ack_distance",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "rts_threshold": {
                                    "id": "rts_threshold",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 2346
                                },
                                "frag_threshold": {
                                    "id": "frag_threshold",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 2346
                                },
                                "encryption": {
                                    "id": "encryption",
                                    "type": "object",
                                    "title": "Encryption",
                                    "required": [
                                        "enabled",
                                        "protocol",
                                        "key"
                                    ],
                                    "properties": {
                                        "enabled": {
                                            "id": "enabled",
                                            "type": "boolean"
                                        },
                                        "protocol": {
                                            "id": "protocol",
                                            "type": "string",
                                            "enum": [
                                                "wep_open",
                                                "wep_shared",
                                                "wpa_personal",
                                                "wpa2_personal",
                                                "wpa_personal_mixed",
                                                "wpa_enterprise",
                                                "wpa2_enterprise",
                                                "wpa_enterprise_mixed",
                                                "wps"
                                            ]
                                        },
                                        "ciphers": {
                                            "id": "ciphers",
                                            "type": "array"
                                        },
                                        "key": {
                                            "id": "key",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "routes": {
            "id": "routes",
            "type": "array",
            "title": "Routes",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "Route",
                "additionalProperties": true,
                "required": [
                    "device",
                    "destination",
                    "next"
                ],
                "properties": {
                    "device": {
                        "id": "device",
                        "type": "string"
                    },
                    "next": {
                        "id": "next",
                        "type": "string"
                    },
                    "destination": {
                        "id": "destination",
                        "type": "string"
                    }
                }
            }
        },
        "dns_servers": {
            "id": "dns_servers",
            "title": "DNS Servers",
            "type": "array",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "string"
            }
        },
        "dns_search": {
            "id": "dns_search",
            "title": "DNS Search",
            "type": "array",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "string"
            }
        }
    }
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="DeviceMonitoring-schema" title="DeviceMonitoring Schema">
                <figure>
                    <artwork>
<![CDATA[
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "type"
    ],
    "properties": {
        "type": {
            "id": "type",
            "type": "string",
            "default": "DeviceMonitoring",
            "pattern": "DeviceMonitoring"
        },
        "general": {
            "id": "general",
            "type": "object",
            "title": "General",
            "additionalProperties": true,
            "properties": {
                "local_time": {
                    "id": "local_time",
                    "type": "integer"
                },
                "uptime": {
                    "id": "uptime",
                    "type": "integer"
                }
            }
        },
        "resources": {
            "id": "resources",
            "type": "object",
            "title": "Resources",
            "additionalProperties": true,
            "properties": {
                "load": {
                    "id": "load",
                    "type": "array",
                    "items": [
                        {
                            "id": "0",
                            "type": "number"
                        },
                        {
                            "id": "1",
                            "type": "number"
                        },
                        {
                            "id": "2",
                            "type": "number"
                        }
                    ]
                },
                "memory": {
                    "id": "memory",
                    "type": "object",
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        },
                        "free": {
                            "id": "free",
                            "type": "integer"
                        },
                        "buffered": {
                            "id": "buffered",
                            "type": "integer"
                        },
                        "cache": {
                            "id": "cache",
                            "type": "integer"
                        }
                    }
                },
                "swap": {
                    "id": "swap",
                    "type": "object",
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        },
                        "free": {
                            "id": "free",
                            "type": "integer"
                        }
                    }
                },
                "connections": {
                    "id": "connections",
                    "type": "object",
                    "properties": {
                        "ipv4": {
                            "id": "ipv4",
                            "type": "object",
                            "properties": {
                                "tcp": {
                                    "id": "tcp",
                                    "type": "integer"
                                },
                                "udp": {
                                    "id": "udp",
                                    "type": "integer"
                                }
                            }
                        },
                        "ipv6": {
                            "id": "ipv6",
                            "type": "object",
                            "properties": {
                                "tcp": {
                                    "id": "tcp",
                                    "type": "integer"
                                },
                                "udp": {
                                    "id": "udp",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "processes": {
                    "id": "processes",
                    "type": "object",
                    "properties": {
                        "running": {
                            "id": "running",
                            "type": "integer"
                        },
                        "sleeping": {
                            "id": "sleeping",
                            "type": "integer"
                        },
                        "blocked": {
                            "id": "blocked",
                            "type": "integer"
                        },
                        "zombie": {
                            "id": "zombie",
                            "type": "integer"
                        },
                        "stopped": {
                            "id": "stopped",
                            "type": "integer"
                        },
                        "paging": {
                            "id": "paging",
                            "type": "integer"
                        }
                    }
                },
                "cpu": {
                    "id": "cpu",
                    "type": "object",
                    "properties": {
                        "frequency": {
                            "id": "frequency",
                            "type": "integer"
                        },
                        "user": {
                            "id": "user",
                            "type": "integer"
                        },
                        "system": {
                            "id": "system",
                            "type": "integer"
                        },
                        "nice": {
                            "id": "nice",
                            "type": "integer"
                        },
                        "idle": {
                            "id": "idle",
                            "type": "integer"
                        },
                        "iowait": {
                            "id": "iowait",
                            "type": "integer"
                        },
                        "irq": {
                            "id": "irq",
                            "type": "integer"
                        },
                        "softirq": {
                            "id": "softirq",
                            "type": "integer"
                        }
                    }
                },
                "flash": {
                    "id": "flash",
                    "type": "object",
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        },
                        "free": {
                            "id": "free",
                            "type": "integer"
                        }
                    }
                },
                "storage": {
                    "id": "storage",
                    "type": "object",
                    "properties": {
                        "total": {
                            "id": "total",
                            "type": "integer"
                        },
                        "free": {
                            "id": "free",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "interfaces": {
            "id": "interfaces",
            "type": "array",
            "title": "Interfaces",
            "uniqueItems": true,
            "additionalItems": true,
            "required": [
                "name"
            ],
            "items": {
                "type": "object",
                "title": "Interface",
                "additionalProperties": true,
                "properties": {
                    "name": {
                        "id": "name",
                        "type": "string"
                    },
                    "uptime": {
                        "id": "uptime",
                        "type": "integer"
                    },
                    "statistics": {
                        "id": "statistics",
                        "type": "object",
                        "properties": {
                            "collisions": {
                                "id": "collisions",
                                "type": "integer"
                            },
                            "rx_frame_errors": {
                                "id": "rx_frame_errors",
                                "type": "integer"
                            },
                            "tx_compressed": {
                                "id": "tx_compressed",
                                "type": "integer"
                            },
                            "multicast": {
                                "id": "multicast",
                                "type": "integer"
                            },
                            "rx_length_errors": {
                                "id": "rx_length_errors",
                                "type": "integer"
                            },
                            "tx_dropped": {
                                "id": "tx_dropped",
                                "type": "integer"
                            },
                            "rx_bytes": {
                                "id": "rx_bytes",
                                "type": "integer"
                            },
                            "rx_missed_errors": {
                                "id": "rx_missed_errors",
                                "type": "integer"
                            },
                            "tx_errors": {
                                "id": "tx_errors",
                                "type": "integer"
                            },
                            "rx_compressed": {
                                "id": "rx_compressed",
                                "type": "integer"
                            },
                            "rx_over_errors": {
                                "id": "rx_over_errors",
                                "type": "integer"
                            },
                            "tx_fifo_errors": {
                                "id": "tx_fifo_errors",
                                "type": "integer"
                            },
                            "rx_crc_errors": {
                                "id": "rx_crc_errors",
                                "type": "integer"
                            },
                            "rx_packets": {
                                "id": "rx_packets",
                                "type": "integer"
                            },
                            "tx_heartbeat_errors": {
                                "id": "tx_heartbeat_errors",
                                "type": "integer"
                            },
                            "rx_dropped": {
                                "id": "rx_dropped",
                                "type": "integer"
                            },
                            "tx_aborted_errors": {
                                "id": "tx_aborted_errors",
                                "type": "integer"
                            },
                            "tx_packets": {
                                "id": "tx_packets",
                                "type": "integer"
                            },
                            "rx_errors": {
                                "id": "rx_errors",
                                "type": "integer"
                            },
                            "tx_bytes": {
                                "id": "tx_bytes",
                                "type": "integer"
                            },
                            "tx_window_errors": {
                                "id": "tx_window_errors",
                                "type": "integer"
                            },
                            "rx_fifo_errors": {
                                "id": "rx_fifo_errors",
                                "type": "integer"
                            },
                            "tx_carrier_errors": {
                                "id": "tx_carrier_errors",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    }
}
]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="NetworkCollection-schema" title="NetworkCollection Schema">
                <figure>
                    <artwork>
<![CDATA[
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "type",
        "collection"
    ],
    "properties": {
        "type": {
            "id": "type",
            "type": "string",
            "default": "NetworkCollection",
            "pattern": "NetworkCollection"
        },
        "collection": {
            "id": "collection",
            "type": "array",
            "title": "NetJSON Objects",
            "uniqueItems": true,
            "additionalItems": true,
            "items": {
                "type": "object",
                "title": "NetJSON Object",
                "additionalProperties": true,
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "id": "type",
                        "type": "string",
                        "enum": [
                            "NetworkRoutes",
                            "NetworkGraph",
                            "DeviceConfiguration",
                            "DeviceMonitoring",
                            "NetworkCollection"
                        ]
                    }
                }
            }
        }
    }
}
]]>
                    </artwork>
                </figure>
            </section>
        </section>
        <section anchor="Contributions" title="Contributions">
            <t>
                The NetJSON format is the product of discussion on
                the interop-dev mailing list:
                <eref target="https://lists.funkfeuer.at/mailman/listinfo/interop-dev">https://lists.funkfeuer.at/mailman/listinfo/interop-dev</eref>.
            </t>
            <t>
                Comments are solicited and should be addressed to
                the interop-dev mailing list at
                <eref target="mailto:interop-dev@lists.funkfeuer.at">interop-dev@lists.funkfeuer.at</eref>
                or to the NetJSON issue tracker at
                <eref target="https://github.com/interop-dev/netjson/issues">https://github.com/interop-dev/netjson/issues</eref>.
            </t>
            <t>
                Some contributors deserve special credit for the intense
                technical discussions, early reviews and constructive contribution:
                Henning Rogge (Fraunhofer FKIE).
            </t>
        </section>
    </back>
</rfc>
